/**
 * Copyright JS Foundation and other contributors, http://js.foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 **/

RED.chatbot = (function() {
    var content = null;
    var chatContainer = null;
    var messageContainer = null;
    var inputContainer = null;
    var chatHistory = [];
    var isProcessing = false;

    function createChatbotContent() {
        content = $('<div class="red-ui-chatbot"></div>');
        chatContainer = $('<div class="red-ui-chatbot-container"></div>').appendTo(content);
        messageContainer = $('<div class="red-ui-chatbot-messages"></div>').appendTo(chatContainer);
        
        // Add welcome message
        addSystemMessage("Welcome to Node-RED Assistant! I can help you create flows or answer questions about Node-RED. Ask me anything or describe a flow you'd like to build.");
        
        // Input area
        inputContainer = $('<div class="red-ui-chatbot-input"></div>').appendTo(chatContainer);
        var textarea = $('<textarea class="red-ui-chatbot-textarea" placeholder="Ask a question or describe a flow you want to create..."></textarea>').appendTo(inputContainer);
        var buttonContainer = $('<div class="red-ui-chatbot-buttons"></div>').appendTo(inputContainer);
        var sendButton = $('<button class="red-ui-button red-ui-chatbot-send">Send</button>').appendTo(buttonContainer);
        
        // Event handlers
        textarea.on('keydown', function(event) {
            if (event.key === 'Enter' && !event.shiftKey) {
                event.preventDefault();
                sendMessage();
            }
        });
        
        sendButton.on('click', function() {
            sendMessage();
        });
        
        function sendMessage() {
            if (isProcessing) return;
            
            var message = textarea.val().trim();
            if (message.length === 0) return;
            
            addUserMessage(message);
            textarea.val('');
            
            // Process the message
            processUserMessage(message);
        }
        
        return content;
    }
    
    function addUserMessage(message) {
        var userMessage = $('<div class="red-ui-chatbot-message red-ui-chatbot-message-user"></div>')
            .appendTo(messageContainer);
        $('<div class="red-ui-chatbot-message-text"></div>')
            .text(message)
            .appendTo(userMessage);
        
        chatHistory.push({ role: 'user', content: message });
        scrollToBottom();
    }
    
    function addSystemMessage(message) {
        var systemMessage = $('<div class="red-ui-chatbot-message red-ui-chatbot-message-system"></div>')
            .appendTo(messageContainer);
        $('<div class="red-ui-chatbot-message-text"></div>')
            .html(message)
            .appendTo(systemMessage);
        
        if (message !== "Welcome to Node-RED Assistant! I can help you create flows or answer questions about Node-RED. Ask me anything or describe a flow you'd like to build.") {
            chatHistory.push({ role: 'assistant', content: message });
        }
        scrollToBottom();
    }
    
    function addFlowMessage(flowJson, flowDescription) {
        var flowMessage = $('<div class="red-ui-chatbot-message red-ui-chatbot-message-flow"></div>')
            .appendTo(messageContainer);
        
        $('<div class="red-ui-chatbot-message-text"></div>')
            .html(flowDescription)
            .appendTo(flowMessage);
        
        var flowActionContainer = $('<div class="red-ui-chatbot-flow-actions"></div>')
            .appendTo(flowMessage);
        
        $('<button class="red-ui-button red-ui-button-small">Insert Flow</button>')
            .on('click', function() {
                insertFlow(flowJson);
            })
            .appendTo(flowActionContainer);
        
        scrollToBottom();
    }
    
    function scrollToBottom() {
        messageContainer.scrollTop(messageContainer[0].scrollHeight);
    }
    
    function processUserMessage(message) {
        isProcessing = true;
        
        // Show typing indicator
        var processingMessage = $('<div class="red-ui-chatbot-message red-ui-chatbot-message-system red-ui-chatbot-message-typing"></div>')
            .appendTo(messageContainer);
        $('<div class="red-ui-chatbot-message-text">Thinking...</div>')
            .appendTo(processingMessage);
        scrollToBottom();
        
        // Get available node types for context
        var nodeTypes = RED.nodes.registry.getNodeDefinitions();
        
        // Get the response from OpenAI service
        RED.openAIService.processMessage(message, chatHistory, nodeTypes)
            .then(function(result) {
                processingMessage.remove();
                
                if (result.success) {
                    if (result.isFlow) {
                        // Add the flow message with insert action
                        addFlowMessage(result.flow, result.description);
                        
                        // Add to chat history
                        chatHistory.push({ 
                            role: 'assistant', 
                            content: result.description 
                        });
                    } else {
                        // Add normal conversation response
                        addSystemMessage(result.content);
                    }
                } else {
                    // Add error message
                    addSystemMessage("I'm sorry, an error occurred: " + (result.error || "Unknown error"));
                }
                
                isProcessing = false;
            })
            .catch(function(error) {
                processingMessage.remove();
                console.error("Error processing message:", error);
                addSystemMessage("I'm sorry, an error occurred while processing your message. Please try again later.");
                isProcessing = false;
            });
    }

    function insertFlow(flowJson) {
        // Convert the flow to the format expected by Node-RED
        // Use RED.view to import the nodes at the current mouse position
        console.log(flowJson, "flowJson");
        change_ids(flowJson);
        RED.view.importNodes(flowJson, {
            addFlow: false,
            touchImport: false,
            generateIds: false,
            generateDefaultNames: false
        });
        
        // Add confirmation message
        addSystemMessage("Flow has been added to the workspace!");
    }

    function change_ids(flowJson) {
        current_ids_to_new_ids = {};
        for (var i = 0; i < flowJson.length; i++) {
            current_ids_to_new_ids[flowJson[i].id] = RED.nodes.id();
        }
        for (var i = 0; i < flowJson.length; i++) {
            flowJson[i].id = current_ids_to_new_ids[flowJson[i].id];
            for (var j = 0; j < flowJson[i].wires.length; j++) {
                flowJson[i].wires[j] = current_ids_to_new_ids[flowJson[i].wires[j]];
            }
        }
    }

    function init() {
        // Add CSS to the page
        $('<style>')
            .prop('type', 'text/css')
            .html(`
                .red-ui-chatbot {
                    display: flex;
                    flex-direction: column;
                    height: 100%;
                    width: 100%;
                    overflow: hidden;
                }
                .red-ui-chatbot-container {
                    display: flex;
                    flex-direction: column;
                    height: 100%;
                    width: 100%;
                }
                .red-ui-chatbot-messages {
                    flex: 1;
                    overflow-y: auto;
                    padding: 10px;
                }
                .red-ui-chatbot-message {
                    margin-bottom: 15px;
                    max-width: 85%;
                    clear: both;
                }
                .red-ui-chatbot-message-system {
                    margin-left: 0;
                }
                .red-ui-chatbot-message-user {
                    float: right;
                    background-color: #1976D2;
                    color: white;
                    border-radius: 12px 12px 0 12px;
                }
                .red-ui-chatbot-message-system .red-ui-chatbot-message-text {
                    background-color: #f0f0f0;
                    border-radius: 12px 12px 12px 0;
                }
                .red-ui-chatbot-message-flow .red-ui-chatbot-message-text {
                    background-color: #f0f0f0;
                    border-radius: 12px 12px 12px 0;
                }
                .red-ui-chatbot-message-text {
                    padding: 10px 14px;
                }
                .red-ui-chatbot-flow-actions {
                    margin-top: 8px;
                    display: flex;
                    justify-content: flex-end;
                }
                .red-ui-chatbot-input {
                    padding: 10px;
                    border-top: 1px solid #eee;
                }
                .red-ui-chatbot-textarea {
                    width: 100%;
                    min-height: 60px;
                    max-height: 200px;
                    border: 1px solid #ccc;
                    border-radius: 4px;
                    padding: 8px;
                    resize: vertical;
                }
                .red-ui-chatbot-buttons {
                    margin-top: 8px;
                    display: flex;
                    justify-content: flex-end;
                }
                .red-ui-chatbot-message-typing .red-ui-chatbot-message-text:after {
                    content: '...';
                    animation: typing 1.5s infinite;
                }
                @keyframes typing {
                    0% { content: '.'; }
                    33% { content: '..'; }
                    66% { content: '...'; }
                }
            `)
            .appendTo('head');

        // Initialize the OpenAI service
        RED.openAIService.init();

        // Create tab content
        var sidebarContent = createChatbotContent();
        
        // Add the tab to the sidebar
        RED.sidebar.addTab({
            id: "chatbot",
            label: "Assistant",
            name: "Node-RED Assistant",
            content: sidebarContent,
            iconClass: "fa fa-comments",
            enableOnEdit: true
        });
    }

    return {
        init: init
    };
})(); 